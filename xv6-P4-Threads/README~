Name: 		Colin Samplawski
Name: 		Sam Mergendahl
CS Login:	samplawski
CS Login:	mergenda
NetId:		csamplawski
NetId:		smergendahl

Part a
We created a simple queue using a linked list to store the
requests. After creating the threads, the worker threads
cond_wait on the queue being empty, and the producer thread
cond_wait on the queue being "full" (at the max size). After waking up
a worker dequeues a request and handles it, while the producer thread
enqueues a request.

Part b
clone() was based on fork() with some changes
join() was based on wait() with some changes
thread_create() allocates a stack and calls clone()
thread_join calls join() and frees the stack that is returned
lock_init() sets the lock flag to 0 (not held)
lock_acquire() uses xchg() to spin wait until the lock is not 1 (is held)
lock_release sets the lock flag back to 0
A small number of changes were needed here and there to make sure everything 
still works with the new threads.
